mixin dropdown(settings)
  - let inputSettings = {
  -   length: "input__field_length_m",
  -   type: "input__field_type_simple",
  -   attr: {placeholder: "For-change"},
  -   state: "",
  -   jsClass: "js-for-change"  
  - }
  - let control = {
  -   jsClass: "js-for-change",
  -   attr: {},
  -   z: ""
  - }
  - let lists = [
  -   {text: "For Change", dataTarget: "forChange1", output: "0", minusTransparent: false, plusTransparent: false},
  -   {text: "For Change", dataTarget: "forChange2", output: "0", minusTransparent: false, plusTransparent: false},
  -   {text: "For Change", dataTarget: "forChange3", output: "0", minusTransparent: false, plusTransparent: false}
  - ]
  - let clearHide = true
  - if(settings) {
  -   if(settings.hasOwnProperty("inputSettings")) inputSettings = settings.inputSettings
  -   if(settings.control) {
  -     if(settings.control.hasOwnProperty("jsClass")) control.jsClass = settings.control.jsClass
  -     if(settings.control.hasOwnProperty("attr")) control.attr = settings.control.attr
  -     if(settings.control.hasOwnProperty("z")) control.z = `dropdown__control_z_${settings.control.z}`
  -   }
  -   if(settings.lists) {
  -     lists = settings.lists
  -     lists.map(function(list) {
  -       if(list.output == "0") list.minusTransparent = true
  -       if(list.output == "10") list.plusTransparent = true
  -       if(list.output > "0") clearHide = false
  -     })
  -   }
  - }
  div.dropdown
    div.dropdown__input
      +input(inputSettings)
    div(class="dropdown__control" class=control.jsClass, class=control.z)&attributes(control.attr)
      ul.dropdown__list
        each list in lists
          li.dropdown__list-element
            span.dropdown__text=list.text
            .dropdown__calc
              if list.minusTransparent 
                button(class="dropdown__button dropdown__button_transparent" type="button" class="dropdown__button_type_minus" data-target=list.dataTarget data-action="minus")="-"
              else
                button(class="dropdown__button" type="button" class="dropdown__button_type_minus" data-target=list.dataTarget data-action="minus")="-"
              output(class="dropdown__output" data-target=list.dataTarget)=list.output
              if list.plusTransparent
                button(class="dropdown__button dropdown__button_transparent" type="button" class="dropdown__button_type_plus" data-target=list.dataTarget data-action="plus")="+"
              else
                button(class="dropdown__button" type="button" class="dropdown__button_type_plus" data-target=list.dataTarget data-action="plus")="+"
      .dropdown__submit-buttons
        .dropdown__clear-button
          if clearHide == true
            +button({
              type: "text",
              text: "очистить",
              attr: {
                "type": "button",
                "data-target": "clear",
                "hidden": "hidden"
              }
            })
          else 
            +button({
              type: "text",
              text: "очистить",
              attr: {
                "type": "button",
                "data-target": "clear"
              }
            })
        .dropdown__submit-button
          +button({
            type: "text",
            text: "применить",
            attr: {
              "type": "button",
              "data-target": "submit",
            }
          })