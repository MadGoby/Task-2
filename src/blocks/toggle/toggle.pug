mixin toggle(settings)
  - let controller = {
  -   type: "",
  -   attr: {}
  - }
  - let mimic = {
  -   type: ""
  - }
  - let text = {
  -   text: "For change",
  -   richText: false,
  -   length: ""
  - }
  - if (settings) {
  -   if(settings.controller) {
  -     if(settings.controller.hasOwnProperty("type")) {
  -       controller.type = `toggle__controller_type_${settings.controller.type}`
  -       mimic.type = `toggle__mimic_type_${settings.controller.type}`
  -     }
  -     if(settings.controller.hasOwnProperty("attr")) controller.attr = settings.controller.attr
  -   }
  -   if(settings.text) {
  -     if(settings.text.hasOwnProperty("text")) text.text = settings.text.text
  -     if(settings.text.hasOwnProperty("richText") && settings.text.richText !== false) text.richText = settings.text.richText
  -     if(settings.text.hasOwnProperty("length")) text.length = `toggle__text_length_${settings.text.length}`
  -   }
  - }
  .toggle
    label(class="toggle__wrapper")
      input(class = "toggle____controller" class=controller.type)&attributes(controller.attr)
      span(class="toggle__mimic" class=mimic.type)
        if mimic.type === "toggle__mimic_type_like"
          p(class="toggle__text" class=text.length)= text.text
      if mimic.type !== "toggle__mimic_type_like"
        .toggle__text-wrapper
          if text.richText
            p(class="toggle__text toggle__text_rich", class=text.length)= text.richText
          p(class="toggle__text", class=text.length)= text.text