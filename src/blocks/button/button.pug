mixin button(settings)
  - const {
  -   attr = {type: "button"},
  -   text = "For Change",
  -   jsClass = false,
  - } = settings
  - let {
  -   type = "regular",
  -   modifierClass = false,
  -   height = false,
  -   hover = false,
  - } = settings
  - let borderHeight = false
  - if(hover) {
  -   type === "border" ? hover="button__border-mimic_transparent" : hover=`button__control_${hover}`
  - }
  - if(type) type = `button__control_type_${type}`
  - if(modifierClass) modifierClass = `button__control_${modifierClass}`
  - if(height) {
  -   borderHeight = `button__border-mimic_size_${height}`
  -   type === "button__control_type_border" ? height = `button__control_border_${height}` : height = `button__control_size_${height}`
  - }
  if type == "button__control_shape_circle"
    div(class=["button", "button_shape_circle"])
      button(class=["button__control", jsClass, type, modifierClass, height] value=text)&attributes(attr)= text
  else if type == "button__control_type_confirm"
    div(class=["button", "button_type_confirm"])
      if type == "button__control_type_border"
        div.button__border-mimic
          button(class=["button__control", jsClass, type, modifierClass, height] value=text)&attributes(attr)= text
      else
        button(class=["button__control", jsClass, type, modifierClass, height] value=text)&attributes(attr)= text
  else
    div(class="button")
      if type == "button__control_type_border"
        div(class=["button__border-mimic", hover, borderHeight])
          button(class=["button__control", jsClass, type, modifierClass, height] value=text)&attributes(attr)= text
      else
        button(class=["button__control", jsClass, type, hover, modifierClass, height] value=text)&attributes(attr)= text