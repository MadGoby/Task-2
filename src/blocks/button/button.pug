mixin button(settings)
  - const {
  -   attrType = "button",
  -   text = "For Change",
  - } = settings
  - let {
  -   type = "regular",
  -   navigationClass = "",
  -   sizeClass = "",
  -   transparentClass = "",
  - } = settings
  - let borderSize = ""
  - const buttonType = type
  - const confirmWrapperClass = type === 'confirm' ? "button_type_confirm " : ""
  - const isTransparentBorder = transparentClass && type === "border"
  - const isBorderSize = sizeClass && type === "border"
  - if (isTransparentBorder) {
  -   transparentClass = "button__border-mimic_transparent"
  - } else if (transparentClass) {
  -   transparentClass=`button__control_${transparentClass}`
  - };
  - if (isBorderSize) {
  -   borderSize = `button__border-mimic_size_${sizeClass}`
  -   sizeClass = `button__control_border_${sizeClass}`
  - } else if (sizeClass) {
  -   sizeClass = `button__control_size_${sizeClass}`
  - };
  - if (type) type = `button__control_type_${type}`
  - if (navigationClass) navigationClass = `button__control_${navigationClass}`
  case buttonType
    when "border"
      div(class="button")
        div(class=["button__border-mimic", transparentClass, borderSize])
          button(class=["button__control", type, navigationClass, sizeClass] value=text type=attrType)= text
    default
      div(class=["button", confirmWrapperClass])
        button(class=["button__control", type, transparentClass, navigationClass, sizeClass] value=text type=attrType)= text